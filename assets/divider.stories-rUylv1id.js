import{j as o}from"./jsx-runtime-DFKZ3ixi.js";import{r as a}from"./index-SSXOyoI7.js";import"./index-DAq-s51E.js";function N(e,r){typeof e=="function"?e(r):e!=null&&(e.current=r)}function b(...e){return r=>e.forEach(i=>N(i,r))}var y=a.forwardRef((e,r)=>{const{children:i,...t}=e,n=a.Children.toArray(i),s=n.find(E);if(s){const l=s.props.children,d=n.map(p=>p===s?a.Children.count(l)>1?a.Children.only(null):a.isValidElement(l)?l.props.children:null:p);return o.jsx(u,{...t,ref:r,children:a.isValidElement(l)?a.cloneElement(l,void 0,d):null})}return o.jsx(u,{...t,ref:r,children:i})});y.displayName="Slot";var u=a.forwardRef((e,r)=>{const{children:i,...t}=e;if(a.isValidElement(i)){const n=w(i);return a.cloneElement(i,{...O(t,i.props),ref:r?b(r,n):n})}return a.Children.count(i)>1?a.Children.only(null):null});u.displayName="SlotClone";var j=({children:e})=>o.jsx(o.Fragment,{children:e});function E(e){return a.isValidElement(e)&&e.type===j}function O(e,r){const i={...r};for(const t in r){const n=e[t],s=r[t];/^on[A-Z]/.test(t)?n&&s?i[t]=(...d)=>{s(...d),n(...d)}:n&&(i[t]=n):t==="style"?i[t]={...n,...s}:t==="className"&&(i[t]=[n,s].filter(Boolean).join(" "))}return{...e,...i}}function w(e){var t,n;let r=(t=Object.getOwnPropertyDescriptor(e.props,"ref"))==null?void 0:t.get,i=r&&"isReactWarning"in r&&r.isReactWarning;return i?e.ref:(r=(n=Object.getOwnPropertyDescriptor(e,"ref"))==null?void 0:n.get,i=r&&"isReactWarning"in r&&r.isReactWarning,i?e.props.ref:e.props.ref||e.ref)}var C=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","span","svg","ul"],R=C.reduce((e,r)=>{const i=a.forwardRef((t,n)=>{const{asChild:s,...l}=t,d=s?y:r;return typeof window<"u"&&(window[Symbol.for("radix-ui")]=!0),o.jsx(d,{...l,ref:n})});return i.displayName=`Primitive.${r}`,{...e,[r]:i}},{}),S="Separator",f="horizontal",A=["horizontal","vertical"],x=a.forwardRef((e,r)=>{const{decorative:i,orientation:t=f,...n}=e,s=D(t)?t:f,d=i?{role:"none"}:{"aria-orientation":s==="vertical"?s:void 0,role:"separator"};return o.jsx(R.div,{"data-orientation":s,...d,...n,ref:r})});x.displayName=S;function D(e){return A.includes(e)}var P=x;function g({weight:e=1,color:r="currentColor",className:i}){const t=`border-${e}`,n=`border-${r}`;return o.jsx(P,{className:`${i} ${t} ${n} w-full`})}g.__docgenInfo={description:"",methods:[],displayName:"Divider",props:{weight:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"1",computed:!1}},color:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"currentColor"',computed:!1}},className:{required:!1,tsType:{name:"string"},description:""},orientation:{required:!1,tsType:{name:"union",raw:'"horizontal" | "vertical"',elements:[{name:"literal",value:'"horizontal"'},{name:"literal",value:'"vertical"'}]},description:""}}};const $={title:"Composites/Divider",component:g,args:{weight:1,color:"currentColor",className:""}},c={decorators:[e=>o.jsxs("div",{children:[o.jsx("div",{className:"font-bold text-3xl font-sans",children:"Divider"}),o.jsx("div",{className:"mt-2",children:"A divider is a border like utility used to provide logical separation between elements."}),o.jsx("div",{children:"A divider can be oriented horizontally or vertically."}),o.jsx("div",{children:"Vertical Orientation"}),o.jsx(e,{}),o.jsx("div",{children:"Horizontal Orientation"}),o.jsx(e,{})]})]};var m,v,h;c.parameters={...c.parameters,docs:{...(m=c.parameters)==null?void 0:m.docs,source:{originalSource:`{
  decorators: [Story => <div>
        <div className={"font-bold text-3xl font-sans"}>Divider</div>
        <div className={"mt-2"}>
          A divider is a border like utility used to provide logical separation
          between elements.
        </div>
        <div>A divider can be oriented horizontally or vertically.</div>

        <div>Vertical Orientation</div>
        <Story />

        <div>Horizontal Orientation</div>
        <Story />
      </div>]
}`,...(h=(v=c.parameters)==null?void 0:v.docs)==null?void 0:h.source}}};const I=["Docs"];export{c as Docs,I as __namedExportsOrder,$ as default};
